data List<a> where
    Cons(a, List<a>)
    Nil()

data Dog where
    .name : String
    .owner : String
    
data Corgi inherits Dog where
    .name    : String
    .owner   : String
    .royalty : Bool

/*m<a> is Mappable when*/
    /*map (m<a>, <a,b> -> b) : m<b>*/

/*List<a> is Mappable because*/
    /*fun map(fn, list) -> */
        /*case list of*/
            /*Nil -> Nil*/
            /*Cons(a,as) -> Cons(fn(a), map(fn, as))*/
 
/*fun map(fn, list) -> */
    /*case list of*/
        /*Nil -> Nil*/
        /*Cons(a,as) -> Cons(fn(a), map(fn, as))*/

/*fun factorial(x) -> */
    /*case x of*/
        /*1 -> 1*/
        /*_ -> factorial((x - 1)) * x*/

fun id(x) -> 
    x

/*Given Num(a). fun square(x : a) : a -> */
    /*x * x*/

fun main(args) ->
    x = 4
    id(x)
    /*print("Hello World!")*/
    /*print("The factorial of 4 is:")*/
    /*print(factorial(x))*/
    /*print(square(x))*/
    id(x)
